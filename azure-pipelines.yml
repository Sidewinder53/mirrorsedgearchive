trigger:
- master
- sandbox
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- script: |
    switch($Build_Sourcebranch) {
      'refs/heads/master' {
        Write-Host "##vso[task.setvariable variable=nodeVersion]10.x"
        Write-Host "##vso[task.setvariable variable=buildCommand]build-prod"
        }
      'refs/heads/sandbox' {
        Write-Host "##vso[task.setvariable variable=nodeVersion]10.x"
        Write-Host "##vso[task.setvariable variable=buildCommand]build-prod"
        }
      'refs/heads/vNext' {
        Write-Host "##vso[task.setvariable variable=nodeVersion]12.x"
        Write-Host "##vso[task.setvariable variable=buildCommand]buildProduction"
        } 
    }
  displayName: 'Set build variables'

- task: UseNode@1
  inputs:
    version: $(nodeVersion)
  displayName: 'Install Node'

- task: Npm@1
  inputs:
    command: 'install'
  displayName: 'Install NPM'

- script: |
    npm run $(buildCommand)
  displayName: 'Build release using gulp'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: CopyFiles@2
  inputs:
    Contents: '$(Build.SourcesDirectory)/dist/**'
    targetFolder: $(Build.ArtifactStagingDirectory)
  displayName: 'Copy dist to Artifact Staging'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: MEA-artifact
  displayName: 'Publish Staged Artifacts to "MEA-artifact"'